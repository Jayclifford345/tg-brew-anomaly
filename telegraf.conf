[agent]
  interval = "1s"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  omit_hostname = true
  debug = true


###############################################################################
#                            Input PLUGINS                                   #
###############################################################################

###############################################################################
[[inputs.modbus]]
  name = "fuel-engine-1"

  slave_id = 1

  ## Timeout for each request
  timeout = "1s"

  # TCP - connect via Modbus/TCP
  controller = "tcp://192.168.1.140:5010"

  holding_registers = [
    { name = "Temperature", byte_order = "AB",   data_type = "UINT16", scale=1.0,  address = [0]},
    { name = "Load",      byte_order = "AB",   data_type = "UINT16", scale=1.0,   address = [1]},
    { name = "Fuel",       byte_order = "AB", data_type = "UINT16", scale=1.0, address = [2]},
  ]


[[inputs.modbus]]
  name = "fuel-engine-2"

  slave_id = 1

  ## Timeout for each request
  timeout = "1s"

  # TCP - connect via Modbus/TCP
  controller = "tcp://192.168.1.140:5011"

  holding_registers = [
    { name = "Temperature", byte_order = "AB",   data_type = "UINT16", scale=1.0,  address = [0]},
    { name = "Load",      byte_order = "AB",   data_type = "UINT16", scale=1.0,   address = [1]},
    { name = "Fuel",       byte_order = "AB", data_type = "UINT16", scale=1.0, address = [2]},
  ]


[[inputs.modbus]]
  name = "fuel-engine-3"

  slave_id = 1

  ## Timeout for each request
  timeout = "1s"

  # TCP - connect via Modbus/TCP
  controller = "tcp://192.168.1.140:5012"

  holding_registers = [
    { name = "Temperature", byte_order = "AB",   data_type = "UINT16", scale=1.0,  address = [0]},
    { name = "Load",      byte_order = "AB",   data_type = "UINT16", scale=1.0,   address = [1]},
    { name = "Fuel",       byte_order = "AB", data_type = "UINT16", scale=1.0, address = [2]},
  ]


[[processors.execd]]
  namepass = ["Temperature"]
  command = ["python3", "./processors/forecasting2.py"]

[[processors.execd]]
  namepass = ["Temperature"]
  command = ["python3", "./processors/forecasting.py"]

[[outputs.file]]
  files = ["stdout"]

# # Configuration for sending metrics to InfluxDB
[[outputs.influxdb_v2]]
#   ## The URLs of the InfluxDB cluster nodes.
#   ##
#   ## Multiple URLs can be specified for a single cluster, only ONE of the
#   ## urls will be written to each interval.
#   ##   ex: urls = ["https://us-west-2-1.aws.cloud2.influxdata.com"]
  urls = ["$URL"]
#
#   ## Token for authentication.
  token = "${TOKEN}"
#
#   ## Organization is the name of the organization you wish to write to; must exist.
  organization = "${ORGANIZATION}"
#
#   ## Destination bucket to write into.
  bucket = "${BUCKET}"
